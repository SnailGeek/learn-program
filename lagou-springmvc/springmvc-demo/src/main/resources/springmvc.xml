<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
">

    <!--开启controller扫描-->
    <context:component-scan base-package="com.lagou.edu.controller"/>

    <!--配置SpringMVC视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--自动注册处理器映射器，处理适配器,将转换器和适配器关联起来-->
    <mvc:annotation-driven conversion-service="conversionServiceBean"/>

    <!--注册自定义类型转换器-->
    <bean id="conversionServiceBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.lagou.edu.controller.converter.DateConverter"/>
            </set>
        </property>
    </bean>

    <!--方案一： 静态资源配置-->
    <!--
        原理：添加标签配置之后，会在SpringMVC上下文中定义一个DefaultServletHttpRequestHandler对象
        这个对象如同一个检查人员，对进入DispatchServlet的url请求进行过滤筛查，如果发现是一个静态资源请求
        那么会把请求转由web应用服务器（tomcat）默认的DefaultServlet来处理，如果不是静态资源请求，那么继续由
        SpringMVC框架处理

        这种只能将静态资源放在webapp的根目录下，不能放在WEB-INF或者resources中
    -->
    <mvc:default-servlet-handler/>

    <!--方案二：SpringMVC自己处理静态资源
        mapping:约定的静态资源的url规则
        location：指定的静态资源的存放位置
    -->
    <mvc:resources mapping="/resources/**" location="classpath:/"/>

</beans>