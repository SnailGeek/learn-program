<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                https://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                https://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/aop
                https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--    开启注解扫描-->
    <context:component-scan base-package="com.lagou.edu"/>

    <!--    引入外部资源文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--lazy-init:  配置bean对象的延迟加载，true或者false，默认false（立即加载）-->
    <bean id="lazyResult" class="com.lagou.edu.pojo.Result" lazy-init="true" init-method="initMethod"/>

    <bean id="companyFactoryBean" class="com.lagou.edu.factory.CompanyFactoryBean">
        <property name="companyInfo" value="拉钩,中关村,111"/>
    </bean>


    <!--进行aop相关的xml配置, 配置aop过程实际就是将aop术语落地-->
    <!--    <bean id="logUtils" class="com.lagou.edu.utils.LogUtils"/>-->
    <!--    &lt;!&ndash;使用config标签表示开始aop配置，再内部配置切面aspect&ndash;&gt;-->
    <!--    <aop:config>-->
    <!--        <aop:aspect id="logAspect" ref="logUtils">-->
    <!--            <aop:pointcut id="pt1"-->
    <!--                          expression="execution(* com.lagou.edu.service.impl.TransferServiceImpl.*(..))"/>-->
    <!--            &lt;!&ndash;            <aop:before method="beforeMethod" pointcut-ref="pt1"/>&ndash;&gt;-->

    <!--            <aop:around method="arroundMethod" pointcut-ref="pt1"/>-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->

    <!--开启aop注解驱动, 纯注解模式，就在一个配置类上加@@EnableAspectJAutoProxy-->
    <aop:aspectj-autoproxy/>

</beans>