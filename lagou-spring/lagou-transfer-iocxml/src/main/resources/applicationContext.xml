<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                https://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="accountDao" class="com.lagou.edu.dao.impl.JdbcAccountDaoImpl" init-method="init" destroy-method="destroy">
        <!--        set注入使用property标签，如果注入的是另外一个bean那么使用ref属性，如果注入的是普通值，那么使用的是value属性-->
        <!--        <property name="ConnectionUtils" ref="connectionUtils"/>-->
        <!--        <property name="name" value="jack"/>-->
        <!--        <property name="sex" value="1"/>-->
        <!--        <property name="money" value="100.3"/>-->

        <!--        <constructor-arg index="0" ref="connectionUtils"/>-->
        <!--        <constructor-arg index="1" value="jack"/>-->
        <!--        <constructor-arg index="2" value="1"/>-->
        <!--        <constructor-arg index="3" value="100.3"/>-->

        <constructor-arg name="connectionUtils" ref="connectionUtils"/>
        <constructor-arg name="name" value="jack"/>
        <constructor-arg name="sex" value="1"/>
        <constructor-arg name="money" value="100.3"/>

        <property name="myArray">
            <array>
                <value>arry1</value>
                <value>arry2</value>
                <value>arry3</value>
            </array>
        </property>

        <property name="myMap">
            <map>
                <entry key="key1" value="value1"/>
                <entry key="key2" value="value2"/>
            </map>
        </property>

        <property name="mySet">
            <set>
                <value>set1</value>
                <value>set2</value>
                <value>set3</value>
            </set>
        </property>

        <property name="myProperties">
            <props>
                <prop key="prop1">value1</prop>
                <prop key="prop2">value2</prop>
            </props>
        </property>
    </bean>

    <bean id="transferService" class="com.lagou.edu.service.impl.TransferServiceImpl">
        <!-- set+name 之后锁定传值的set方法-->
        <property name="AccountDao" ref="accountDao"/>
    </bean>


    <!--事务-->
    <bean id="transactionManager" class="com.lagou.edu.utils.TransactionManager">
        <property name="ConnectionUtils" ref="connectionUtils"/>
    </bean>

    <bean id="proxyFactory" class="com.lagou.edu.factory.ProxyFactory">
        <property name="TransactionManager" ref="transactionManager"/>
    </bean>

    <!--    Spring Ioc实例化的三种方式-->
    <!--    方式一：使用无参构造器（推荐）-->
    <!--    <bean id="connectionUtils" class="com.lagou.edu.utils.ConnectionUtils"/>-->

    <!--方式二：静态方法-->
    <!--    <bean id="connectionUtils" class="com.lagou.edu.factory.CreateBeanFactory" factory-method="getInstanceStatic"/>-->

    <!--    方式三：实例化方法-->
    <bean id="createBeanFactory" class="com.lagou.edu.factory.CreateBeanFactory"/>
    <bean id="connectionUtils" factory-bean="createBeanFactory" factory-method="getInstance"/>


</beans>